services:
  traefik:
    image: "traefik:v3.4"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${LE_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.rl-app.ratelimit.average=100"
      - "traefik.http.middlewares.rl-app.ratelimit.burst=200"
      - "traefik.http.middlewares.sec-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.sec-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.sec-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.sec-headers.headers.stsPreload=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - linkloom-traefik

  grafana:
    container_name: linkloom-grafana
    image: nightmarevco/linkloom-grafana:latest
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - linkloom-traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.linkloom-grfana.rule=Host(`${GF_HOSTNAME}`)"
      - "traefik.http.routers.linkloom-grfana.service=linkloom-grfana-service"
      - "traefik.http.routers.linkloom-grfana.entrypoints=websecure"
      - "traefik.http.routers.linkloom-grfana.priority=1"
      - "traefik.http.services.linkloom-grfana-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.linkloom-grfana.tls.certresolver=letsencrypt"
      - "traefik.http.routers.linkloom-grfana.middlewares=rl-app,sec-headers"

  loki:
    container_name: linkloom-loki
    image: nightmarevco/linkloom-loki:latest
    restart: always
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget --quiet --tries=1 --output-document=- http://localhost:3100/ready | grep -q -w ready || exit 1
      start_period: 20s
      interval: 10s
      timeout: 1s
      retries: 12
    networks:
      - linkloom-traefik

  prometheus:
    container_name: linkloom-prometheus
    image: nightmarevco/linkloom-prometheus:latest
    restart: always
    volumes:
      - prometheus-data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "--tries=1", "--timeout=5", "http://localhost:9090/-/ready"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 60s
    depends_on:
      loki:
        condition: service_healthy
      mongo-prometheus:
        condition: service_started
    networks:
      - linkloom-traefik

  frontend:
    container_name: linkloom-frontend
    image: nightmarevco/linkloom:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "--timeout=5", "--tries=1", "http://linkloom-frontend:3000/api/heatlh"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - linkloom-traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.linkloom-frontend.rule=Host(`${NEXT_HOSTNAME}`)"
      - "traefik.http.routers.linkloom-frontend.service=linkloom-frontend-service"
      - "traefik.http.routers.linkloom-frontend.entrypoints=websecure"
      - "traefik.http.routers.linkloom-frontend.priority=1"
      - "traefik.http.services.linkloom-frontend-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.linkloom-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.linkloom-frontend.middlewares=rl-app,sec-headers"

  db:
    container_name: linkloom-db
    image: mongo:8.0
    restart: always
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - linkloom-traefik

  db-studio:
    container_name: linkloom-db-studio
    image: mongo-express:1.0.0
    restart: always
    environment:
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - linkloom-traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.linkloom-db-studio.rule=Host(`${ME_HOSTNAME}`)"
      - "traefik.http.routers.linkloom-db-studio.service=linkloom-db-studio-service"
      - "traefik.http.routers.linkloom-db-studio.entrypoints=websecure"
      - "traefik.http.routers.linkloom-db-studio.priority=1"
      - "traefik.http.services.linkloom-db-studio-service.loadbalancer.server.port=8081"
      - "traefik.http.routers.linkloom-db-studio.tls.certresolver=letsencrypt"
      - "traefik.http.routers.linkloom-db-studio.middlewares=rl-app,sec-headers"

  mongo-prometheus:
    container_name: linkloom-mongo-exporter
    image: bitnami/mongodb-exporter:0.47.0
    restart: unless-stopped
    environment:
      MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@db:27017/admin
    command:
      - --web.listen-address=:9216
      - --collector.dbstats
      - --collector.replicasetstatus
      - --collector.diagnosticdata
      - --collector.fcv
      - --no-collector.exporter-metrics
    depends_on:
      db:
        condition: service_healthy
    networks:
      - linkloom-traefik

volumes:
  mongo-data: {}
  grafana-data: {}
  prometheus-data: {}


networks:
  linkloom-traefik:
    external: true
